Prefix(:=<http://www.ease-crc.org/ont/SOMA-PROC.owl#>)
Prefix(dc:=<http://purl.org/dc/elements/1.1/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(SOMA:=<http://www.ease-crc.org/ont/SOMA.owl#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://www.ease-crc.org/ont/SOMA-PROC.owl>
Import(<http://www.ease-crc.org/ont/SOMA-OBJ.owl>)
Import(<http://www.ease-crc.org/ont/SOMA.owl>)
Annotation(rdfs:comment "SOMA-PROC.owl formalizes the high-level knowledge associated to Processes -- occurrents whose unfolding is not necessarily driven by some agentive cause/agent participant.

It includes the upper level of a taxonomy of process types.

Some specific concepts relevant to the domain of robotics are also defined here, such as body motions, changes in relative location of objects, force interactions and the roles of objects participating in them.

Some specific concepts relevant to the domain of household robotics are also defined here, such as an upper level for a taxonomy of physical and chemical processes involved in cooking.

SOMA-PROC should not import SOMA-ACT or other modules that import SOMA-ACT. This is the result of a design choice that the process is more fundamental than the action -- an action can even be regarded as a process as long as the agentive nature of its cause is not relevant.

Further, this also means that, at least according to the SOMA approach, to enact an action is to cause processes to unfold. This view comes from the Cognitive Robot Abstract Machine (CRAM) where \"actions\" are broken down into \"motions\". 

That is, in CRAM an upper level exists which contains an agent and objects with semantics, and with semantics for the changes in relationships between these. However, to make this layer effective in the world, there exists another layer at which the actual physical processes of movement and control are relevant.")

Declaration(Class(SOMA:Agonist))
Declaration(Class(SOMA:Alteration))
Declaration(Class(SOMA:AlterativeInteraction))
Declaration(Class(SOMA:AlteredObject))
Declaration(Class(SOMA:Antagonist))
Declaration(Class(SOMA:Approaching))
Declaration(Class(SOMA:BodyMovement))
Declaration(Class(SOMA:Boiling))
Declaration(Class(SOMA:ChemicalProcess))
Declaration(Class(SOMA:Collision))
Declaration(Class(SOMA:CreatedObject))
Declaration(Class(SOMA:Creation))
Declaration(Class(SOMA:Deformation))
Declaration(Class(SOMA:DestroyedObject))
Declaration(Class(SOMA:Destruction))
Declaration(Class(SOMA:DirectedMotion))
Declaration(Class(SOMA:Driving))
Declaration(Class(SOMA:Fluid))
Declaration(Class(SOMA:FluidFlow))
Declaration(Class(SOMA:Flying))
Declaration(Class(SOMA:ForceInteraction))
Declaration(Class(SOMA:GraspingMotion))
Declaration(Class(SOMA:HeadMovement))
Declaration(Class(SOMA:HeadTurning))
Declaration(Class(SOMA:IntermediateGrasp))
Declaration(Class(SOMA:Leaning))
Declaration(Class(SOMA:Limb))
Declaration(Class(SOMA:LimbMotion))
Declaration(Class(SOMA:Locomotion))
Declaration(Class(SOMA:Motion))
Declaration(Class(SOMA:MotionDescription))
Declaration(Class(SOMA:MotionProcess))
Declaration(Class(SOMA:MovedObject))
Declaration(Class(SOMA:MovingAway))
Declaration(Class(SOMA:Patient))
Declaration(Class(SOMA:PhaseTransition))
Declaration(Class(SOMA:PhysicalEffector))
Declaration(Class(SOMA:PhysicsProcess))
Declaration(Class(SOMA:PosturalMoving))
Declaration(Class(SOMA:PowerGrasp))
Declaration(Class(SOMA:PrecisionGrasp))
Declaration(Class(SOMA:PrehensileEffector))
Declaration(Class(SOMA:PrehensileMotion))
Declaration(Class(SOMA:PreservativeInteraction))
Declaration(Class(SOMA:ProcessFlow))
Declaration(Class(SOMA:ProcessType))
Declaration(Class(SOMA:Progression))
Declaration(Class(SOMA:ReleasingMotion))
Declaration(Class(SOMA:Rubbing))
Declaration(Class(SOMA:ShapedObject))
Declaration(Class(SOMA:Standing))
Declaration(Class(SOMA:Swimming))
Declaration(Class(SOMA:Tapping))
Declaration(Class(SOMA:Taxis))
Declaration(Class(SOMA:Turning))
Declaration(Class(SOMA:UndirectedMotion))
Declaration(Class(SOMA:Vaporizing))
Declaration(Class(SOMA:Walking))
Declaration(Class(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Description>))
Declaration(Class(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#EventType>))
Declaration(Class(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#PhysicalAgent>))
Declaration(Class(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#PhysicalArtifact>))
Declaration(Class(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#PhysicalObject>))
Declaration(Class(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Process>))
Declaration(Class(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Role>))
Declaration(Class(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Situation>))
Declaration(Class(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Substance>))
Declaration(ObjectProperty(SOMA:definesProcess))
Declaration(ObjectProperty(SOMA:executesMotion))
Declaration(ObjectProperty(SOMA:hasProcessType))
Declaration(ObjectProperty(SOMA:interactsWith))
Declaration(ObjectProperty(SOMA:isExecutedMotionIn))
Declaration(ObjectProperty(SOMA:isMotionDescriptionFor))
Declaration(ObjectProperty(SOMA:isProcessDefinedIn))
Declaration(ObjectProperty(SOMA:isProcessTypeOf))
Declaration(ObjectProperty(SOMA:isSupportedBy))
Declaration(ObjectProperty(SOMA:supports))
Declaration(ObjectProperty(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#associatedWith>))
Declaration(ObjectProperty(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#classifies>))
Declaration(ObjectProperty(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#defines>))
Declaration(ObjectProperty(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasPart>))
Declaration(ObjectProperty(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasParticipant>))
Declaration(ObjectProperty(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isDefinedIn>))
Declaration(ObjectProperty(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isPartOf>))
Declaration(ObjectProperty(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isRelatedToConcept>))
Declaration(ObjectProperty(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#satisfies>))

############################
#   Object Properties
############################

# Object Property: SOMA:definesProcess (defines process)

AnnotationAssertion(rdfs:comment SOMA:definesProcess "A relation between a description and a process type.")
AnnotationAssertion(rdfs:label SOMA:definesProcess "defines process")
SubObjectPropertyOf(SOMA:definesProcess <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#defines>)
InverseObjectProperties(SOMA:definesProcess SOMA:isProcessDefinedIn)
ObjectPropertyDomain(SOMA:definesProcess <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Description>)
ObjectPropertyRange(SOMA:definesProcess SOMA:ProcessType)

# Object Property: SOMA:executesMotion (executes motion)

AnnotationAssertion(rdfs:comment SOMA:executesMotion "A relation between an motion process and a motion event type, e.g. 'lifting an object' executes the motion process 'lifting'."@en)
AnnotationAssertion(rdfs:label SOMA:executesMotion "executes motion"@en)
SubObjectPropertyOf(SOMA:executesMotion SOMA:isOccurrenceOf)
InverseObjectProperties(SOMA:executesMotion SOMA:isExecutedMotionIn)
ObjectPropertyDomain(SOMA:executesMotion SOMA:MotionProcess)
ObjectPropertyRange(SOMA:executesMotion SOMA:Motion)

# Object Property: SOMA:hasProcessType (has process type)

AnnotationAssertion(rdfs:comment SOMA:hasProcessType "A relation between roles and process types, e.g. a catalysator is needed to trigger some chemical reaction.")
AnnotationAssertion(rdfs:label SOMA:hasProcessType "has process type")
SubObjectPropertyOf(SOMA:hasProcessType <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isRelatedToConcept>)
InverseObjectProperties(SOMA:hasProcessType SOMA:isProcessTypeOf)
ObjectPropertyDomain(SOMA:hasProcessType <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Role>)
ObjectPropertyRange(SOMA:hasProcessType SOMA:ProcessType)

# Object Property: SOMA:interactsWith (interacts with)

AnnotationAssertion(rdfs:comment SOMA:interactsWith "A relation between objects that interact with each other.")
AnnotationAssertion(rdfs:label SOMA:interactsWith "interacts with")
SubObjectPropertyOf(SOMA:interactsWith <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#associatedWith>)
SymmetricObjectProperty(SOMA:interactsWith)
ObjectPropertyDomain(SOMA:interactsWith <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#PhysicalObject>)
ObjectPropertyRange(SOMA:interactsWith <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#PhysicalObject>)

# Object Property: SOMA:isExecutedMotionIn (is executed motion in)

AnnotationAssertion(rdfs:comment SOMA:isExecutedMotionIn "A relation between an motion process and a motion event type, e.g. 'lifting an object' executes the motion process 'lifting'."@en)
AnnotationAssertion(rdfs:label SOMA:isExecutedMotionIn "is executed motion in"@en)
SubObjectPropertyOf(SOMA:isExecutedMotionIn SOMA:isOccurringIn)
ObjectPropertyDomain(SOMA:isExecutedMotionIn SOMA:Motion)
ObjectPropertyRange(SOMA:isExecutedMotionIn SOMA:MotionProcess)

# Object Property: SOMA:isMotionDescriptionFor (is motion description for)

AnnotationAssertion(rdfs:comment SOMA:isMotionDescriptionFor "A special relation between a Motion Plan and a Motion, to indicate that the Motion Plan describes a way to achieve the Motion."@en)
AnnotationAssertion(rdfs:label SOMA:isMotionDescriptionFor "is motion description for"@en)
SubObjectPropertyOf(SOMA:isMotionDescriptionFor <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#describes>)
ObjectPropertyDomain(SOMA:isMotionDescriptionFor SOMA:MotionDescription)
ObjectPropertyRange(SOMA:isMotionDescriptionFor SOMA:Motion)

# Object Property: SOMA:isProcessDefinedIn (is process defined in)

AnnotationAssertion(rdfs:comment SOMA:isProcessDefinedIn "A relation between a process type and a description that defines it.")
AnnotationAssertion(rdfs:label SOMA:isProcessDefinedIn "is process defined in")
SubObjectPropertyOf(SOMA:isProcessDefinedIn <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isDefinedIn>)
ObjectPropertyDomain(SOMA:isProcessDefinedIn SOMA:ProcessType)
ObjectPropertyRange(SOMA:isProcessDefinedIn <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Description>)

# Object Property: SOMA:isProcessTypeOf (is process type of)

AnnotationAssertion(rdfs:comment SOMA:isProcessTypeOf "A relation between roles and process types, e.g. a catalysator is needed to trigger some chemical reaction.")
AnnotationAssertion(rdfs:label SOMA:isProcessTypeOf "is process type of")
SubObjectPropertyOf(SOMA:isProcessTypeOf <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isRelatedToConcept>)
ObjectPropertyDomain(SOMA:isProcessTypeOf SOMA:ProcessType)
ObjectPropertyRange(SOMA:isProcessTypeOf <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Role>)

# Object Property: SOMA:isSupportedBy (is supported by)

AnnotationAssertion(rdfs:comment SOMA:isSupportedBy "A relation between an object (the supporter) and another object (the supportee) where the supporter cancels the effect of gravity on the supportee.")
AnnotationAssertion(rdfs:label SOMA:isSupportedBy "is supported by")
SubObjectPropertyOf(SOMA:isSupportedBy SOMA:interactsWith)

# Object Property: SOMA:supports (SOMA:supports)

AnnotationAssertion(rdfs:comment SOMA:supports "A relation between an object (the supporter) and another object (the supportee) where the supporter cancels the effect of gravity on the supportee.")
SubObjectPropertyOf(SOMA:supports SOMA:interactsWith)



############################
#   Classes
############################

# Class: SOMA:Agonist (SOMA:Agonist)

AnnotationAssertion(rdfs:comment SOMA:Agonist "A role that classifies entities with a tendency to either cause an alteration or to preserve some state.")
SubClassOf(SOMA:Agonist SOMA:Patient)

# Class: SOMA:Alteration (SOMA:Alteration)

AnnotationAssertion(rdfs:comment SOMA:Alteration "A process by which an aspect of some object changes such as ice cream melting in the sun.")
SubClassOf(SOMA:Alteration SOMA:ProcessType)

# Class: SOMA:AlterativeInteraction (Alterative interaction)

AnnotationAssertion(rdfs:comment SOMA:AlterativeInteraction "A force interaction where the agonist has the tendency to set another object into motion. An example is 'opening a door' where some object interacts with the door such that it moves out of its frame.")
AnnotationAssertion(rdfs:label SOMA:AlterativeInteraction "Alterative interaction")
SubClassOf(SOMA:AlterativeInteraction SOMA:ForceInteraction)
DisjointClasses(SOMA:AlterativeInteraction SOMA:PreservativeInteraction)

# Class: SOMA:Antagonist (SOMA:Antagonist)

AnnotationAssertion(rdfs:comment SOMA:Antagonist "A role that classifies entities that are opposed to the tendency of some agonist.")
SubClassOf(SOMA:Antagonist SOMA:Patient)

# Class: SOMA:Approaching (SOMA:Approaching)

AnnotationAssertion(rdfs:comment SOMA:Approaching "A process type to classify motions by which a body approaches some object or location.")
SubClassOf(SOMA:Approaching SOMA:Locomotion)

# Class: SOMA:BodyMovement (SOMA:BodyMovement)

AnnotationAssertion(rdfs:comment SOMA:BodyMovement "Motion described in terms of how parts of an Agent's body move.

As such, this concept can be applied only to motions involving some PhysicalAgent, or body parts of a PhysicalAgent.")
SubClassOf(SOMA:BodyMovement SOMA:Motion)
SubClassOf(SOMA:BodyMovement ObjectAllValuesFrom(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#classifies> ObjectUnionOf(ObjectSomeValuesFrom(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasParticipant> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#PhysicalAgent>) ObjectSomeValuesFrom(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasParticipant> ObjectIntersectionOf(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#PhysicalObject> ObjectSomeValuesFrom(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isPartOf> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#PhysicalAgent>))))))

# Class: SOMA:Boiling (SOMA:Boiling)

AnnotationAssertion(rdfs:comment SOMA:Boiling "In each instance of this collection some liquid matter is raised to its boilingPoint and is thereby changed from being in the Liquid-StateOfMatter to being in the Gaseous-StateOfMatter.")
SubClassOf(SOMA:Boiling SOMA:Vaporizing)

# Class: SOMA:ChemicalProcess (Chemical process)

AnnotationAssertion(rdfs:comment SOMA:ChemicalProcess "A process by which the chemical constituency of an Entity or set of Entities changes.

In some sense any process that results in entities being created or destroyed might trivially fit here, however this concept is intended specifically for Events where the occuring chemical reactions are of importance.")
AnnotationAssertion(rdfs:label SOMA:ChemicalProcess "Chemical process")
SubClassOf(SOMA:ChemicalProcess <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Process>)

# Class: SOMA:Collision (SOMA:Collision)

AnnotationAssertion(rdfs:comment SOMA:Collision "A contact event of objects bumping into each other such that their movement is affected.")
SubClassOf(SOMA:Collision SOMA:ProcessType)

# Class: SOMA:Creation (Creation)

AnnotationAssertion(rdfs:comment SOMA:Creation "A process by which an Entity is created in the physical world.

Note, most of the physical Entities we will be considering here are in fact arrangements of many other, smaller physical Entities. Therefore another way to look at this is, a 'Physical creation' is the process by which a set of physical Entities is arranged in a certain way, and the arrangement is then itself considered a physical Entity.")
AnnotationAssertion(rdfs:label SOMA:Creation "Creation")
SubClassOf(SOMA:Creation SOMA:ProcessType)
SubClassOf(SOMA:Creation ObjectSomeValuesFrom(SOMA:isProcessTypeOf SOMA:CreatedObject))

# Class: SOMA:Deformation (SOMA:Deformation)

AnnotationAssertion(rdfs:comment SOMA:Deformation "A process by which a physical Entity changes its shape under the influence of some factors outside of the Entity.

Note, changes of shape may be self-caused; for example, a gas will naturally disperse. This however would be a different type of process (Dispersion).

A soft slab of clay deforming under its own weight on Earth would still count as deformation: it is the gravity of the Earth (so, a factor outside the slab of clay) which makes the slab change shape.")
SubClassOf(SOMA:Deformation SOMA:Alteration)
SubClassOf(SOMA:Deformation ObjectExactCardinality(1 SOMA:isProcessTypeOf SOMA:ShapedObject))
DisjointClasses(SOMA:Deformation SOMA:FluidFlow)

# Class: SOMA:Destruction (Destruction)

AnnotationAssertion(rdfs:comment SOMA:Destruction "A process by which a physical Entity is destroyed.

Note, most of the physical Entities we are concerned with are actually arrangements of many smaller physical Entities, so another way to look at this is that a 'Physical destruction' is a process by which an arrangement of physical Entities, which was previously itself considered a physical Entity, is changed to such an extent that it is no longer recognized as continuing to exist.")
AnnotationAssertion(rdfs:label SOMA:Destruction "Destruction")
SubClassOf(SOMA:Destruction SOMA:ProcessType)
SubClassOf(SOMA:Destruction ObjectSomeValuesFrom(SOMA:isProcessTypeOf SOMA:DestroyedObject))

# Class: SOMA:DirectedMotion (Directed motion)

AnnotationAssertion(rdfs:comment SOMA:DirectedMotion "A Motion that is considered to be toward a location or along a path. It is not important that the final location or path be the intention of some Agent, but it is considered that the important feature of this Motion is that it has a path and/or destination.")
AnnotationAssertion(rdfs:label SOMA:DirectedMotion "Directed motion")
SubClassOf(SOMA:DirectedMotion SOMA:Motion)
DisjointClasses(SOMA:DirectedMotion SOMA:UndirectedMotion)

# Class: SOMA:Driving (SOMA:Driving)

AnnotationAssertion(rdfs:comment SOMA:Driving "A process type classifying a motion of a body that exists because this body is attached to and controls some other moving body, usually a vehicle.")
SubClassOf(SOMA:Driving SOMA:Locomotion)
DisjointClasses(SOMA:Driving SOMA:Flying)
DisjointClasses(SOMA:Driving SOMA:Swimming)
DisjointClasses(SOMA:Driving SOMA:Walking)

# Class: SOMA:FluidFlow (Fluid flow)

AnnotationAssertion(rdfs:comment SOMA:FluidFlow "A process by which a fluid moves or is moved from a location to another, but such that it maintains its constitution. A fluid is an Entity made of many smaller Entities, loosely bound to each other.

An issue to highlight here is the maintenance of constitution. Fluids-- gases in particular-- are prone to disperse. Such a process is not flow however, because the loose bounds between the constituents become even looser, to the point of the original Entity becoming entirely discombobulated. ")
AnnotationAssertion(rdfs:label SOMA:FluidFlow "Fluid flow")
SubClassOf(SOMA:FluidFlow SOMA:Motion)
SubClassOf(SOMA:FluidFlow ObjectSomeValuesFrom(SOMA:isProcessTypeOf SOMA:MovedObject))

# Class: SOMA:Flying (SOMA:Flying)

AnnotationAssertion(rdfs:comment SOMA:Flying "A process type classifying a motion of a body that, through its own power, keeps itself aloft.")
SubClassOf(SOMA:Flying SOMA:Locomotion)
DisjointClasses(SOMA:Flying SOMA:Swimming)
DisjointClasses(SOMA:Flying SOMA:Walking)

# Class: SOMA:ForceInteraction (Force interaction)

AnnotationAssertion(rdfs:comment SOMA:ForceInteraction "Classifies events in which two entities interact with each other with a reference to force. One of the entities, the agonist, has a tendency to either set the other entity (the antagonist) into motion, or to keep it still under the influence of some other force. The tendency only manifests in case the agonist is the \"stronger entity\".")
AnnotationAssertion(rdfs:label SOMA:ForceInteraction "Force interaction")
AnnotationAssertion(rdfs:seeAlso SOMA:ForceInteraction "Talmy, Leonard (1981) ‘Force Dynamics’. Language and Mental Imagery. May 1981, University of California, Berkeley.")
EquivalentClasses(SOMA:ForceInteraction ObjectUnionOf(SOMA:AlterativeInteraction SOMA:PreservativeInteraction))
SubClassOf(SOMA:ForceInteraction SOMA:ProcessType)
SubClassOf(SOMA:ForceInteraction ObjectSomeValuesFrom(SOMA:isProcessTypeOf SOMA:Agonist))
SubClassOf(SOMA:ForceInteraction ObjectSomeValuesFrom(SOMA:isProcessTypeOf SOMA:Antagonist))

# Class: SOMA:GraspingMotion (Grasping motion)

AnnotationAssertion(rdfs:comment SOMA:GraspingMotion "A process type classifying a motion by which some end effector acquires kinematic control over some other object.")
AnnotationAssertion(rdfs:label SOMA:GraspingMotion "Grasping motion")
EquivalentClasses(SOMA:GraspingMotion ObjectUnionOf(SOMA:IntermediateGrasp SOMA:PowerGrasp SOMA:PrecisionGrasp))
SubClassOf(SOMA:GraspingMotion SOMA:PrehensileMotion)
DisjointClasses(SOMA:GraspingMotion SOMA:ReleasingMotion)

# Class: SOMA:HeadMovement (SOMA:HeadMovement)

AnnotationAssertion(rdfs:comment SOMA:HeadMovement "The Agent moves a part of their body carrying high-bandwidth sensors such as cameras. The movement of other body parts is not significant.")
AnnotationAssertion(rdfs:comment SOMA:HeadMovement "todo: (Mihai:) This seems too specific, given the \"Directed\"/\"Undirected motion\" categories.")
SubClassOf(SOMA:HeadMovement SOMA:BodyMovement)

# Class: SOMA:HeadTurning (SOMA:HeadTurning)

AnnotationAssertion(rdfs:comment SOMA:HeadTurning "A process type classifying a motion of an Agent's head such that the direction this head faces changes relative to the facing direction of the Agent's body as a whole.")
SubClassOf(SOMA:HeadTurning SOMA:HeadMovement)

# Class: SOMA:IntermediateGrasp (Intermediate grasp)

AnnotationAssertion(rdfs:comment SOMA:IntermediateGrasp "A kind of grasp that acquires kinematic control over the gripped object, but without attempting to achieve either strong holding force nor precision of subsequent movement of the gripped object.")
AnnotationAssertion(rdfs:label SOMA:IntermediateGrasp "Intermediate grasp")
SubClassOf(SOMA:IntermediateGrasp SOMA:GraspingMotion)
DisjointClasses(SOMA:IntermediateGrasp SOMA:PowerGrasp)
DisjointClasses(SOMA:IntermediateGrasp SOMA:PrecisionGrasp)

# Class: SOMA:Leaning (SOMA:Leaning)

AnnotationAssertion(rdfs:comment SOMA:Leaning "An Agent pitches its body in some direction.")
SubClassOf(SOMA:Leaning SOMA:PosturalMoving)

# Class: SOMA:LimbMotion (Limb motion)

AnnotationAssertion(rdfs:comment SOMA:LimbMotion "An Agent moves its limbs in some way.")
AnnotationAssertion(rdfs:label SOMA:LimbMotion "Limb motion")
SubClassOf(SOMA:LimbMotion SOMA:DirectedMotion)
SubClassOf(SOMA:LimbMotion ObjectSomeValuesFrom(SOMA:isProcessTypeOf ObjectIntersectionOf(SOMA:MovedObject ObjectAllValuesFrom(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#classifies> SOMA:Limb))))
DisjointClasses(SOMA:LimbMotion SOMA:Locomotion)
DisjointClasses(SOMA:LimbMotion SOMA:PrehensileMotion)

# Class: SOMA:Locomotion (SOMA:Locomotion)

AnnotationAssertion(rdfs:comment SOMA:Locomotion "Conceptually related to Navigation, but distinguishable from it because of the profile, ie. the focus of the task.

Navigation is about reaching some goal.

Locomotion is concerned more with the actual motion.")
AnnotationAssertion(rdfs:comment SOMA:Locomotion "The Agent repositions their body in the environment.")
SubClassOf(SOMA:Locomotion SOMA:BodyMovement)
SubClassOf(SOMA:Locomotion SOMA:DirectedMotion)
DisjointClasses(SOMA:Locomotion SOMA:PrehensileMotion)

# Class: SOMA:Motion (SOMA:Motion)

AnnotationAssertion(rdfs:comment SOMA:Motion "An EventType that classifies motion Processes.")
AnnotationAssertion(rdfs:comment SOMA:Motion "Motion type")
SubClassOf(SOMA:Motion SOMA:ProcessType)
SubClassOf(SOMA:Motion ObjectAllValuesFrom(SOMA:isExecutedMotionIn SOMA:MotionProcess))

# Class: SOMA:MotionDescription (Motion Description)

AnnotationAssertion(rdfs:comment SOMA:MotionDescription "A Description of a Motion process, e.g. moving the arm into a specific location"@en)
AnnotationAssertion(rdfs:label SOMA:MotionDescription "Motion Description"@en)
SubClassOf(SOMA:MotionDescription SOMA:ProcessFlow)

# Class: SOMA:MotionProcess (Motion process)

AnnotationAssertion(rdfs:comment SOMA:MotionProcess "A class that classifies motion processes. This class is used to represent any process involving motion, encompassing a wide range of activities such as walking, running, jumping, and any other form of physical movement."@en)
AnnotationAssertion(rdfs:label SOMA:MotionProcess "Motion process"@en)
SubClassOf(SOMA:MotionProcess SOMA:PhysicsProcess)

# Class: SOMA:MovingAway (SOMA:MovingAway)

AnnotationAssertion(rdfs:comment SOMA:MovingAway "A process type classifying a motion by which some Agent puts distance between itself and another object or location.")
SubClassOf(SOMA:MovingAway SOMA:Locomotion)

# Class: SOMA:PhaseTransition (Phase transition)

AnnotationAssertion(rdfs:comment SOMA:PhaseTransition "An EventType that classifies processes by which matter changes from some distinguishable phase to another. We will use this to refer to the classical phase transitions between Solid, Liquid, Gaseous, Plasma etc. phases.")
AnnotationAssertion(rdfs:label SOMA:PhaseTransition "Phase transition")
AnnotationAssertion(rdfs:seeAlso SOMA:PhaseTransition "The phase transition concept has also been more or less metaphorically applied in other contexts. An example from physics is the \"jamming transition\", and sometimes \"phase transitions\" are spoken of when describing problem spaces such as 3SAT.

In all these cases, the metaphor points to the existence of several regions of qualitatively different behavior (unimpeded passage of solid grains vs deadlock in a corridor; problem instances where the answer NO is trivial to prove vs. problem instances where the answer YES is trivial to prove), separated fairly sharply when some quantity reaches a threshold.")
SubClassOf(SOMA:PhaseTransition SOMA:Alteration)

# Class: SOMA:PhysicsProcess (Physical process)

AnnotationAssertion(rdfs:comment SOMA:PhysicsProcess "A process involving physical objects and phenomena which does not change the chemical constituency of the affected objects.")
AnnotationAssertion(rdfs:label SOMA:PhysicsProcess "Physical process")
SubClassOf(SOMA:PhysicsProcess <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Process>)
SubClassOf(SOMA:PhysicsProcess ObjectSomeValuesFrom(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasParticipant> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#PhysicalObject>))

# Class: SOMA:PosturalMoving (SOMA:PosturalMoving)

AnnotationAssertion(rdfs:comment SOMA:PosturalMoving "The Agent changes or takes an overall configuration of its body but is otherwise not significantly affecting other objects nor moving a significant amount from its original location.

Posture changes may take place as part of other actions, for example turning when walking.")
SubClassOf(SOMA:PosturalMoving SOMA:BodyMovement)

# Class: SOMA:PowerGrasp (Power grasp)

AnnotationAssertion(rdfs:comment SOMA:PowerGrasp "An Agent grasps an object, and focuses on obtaining a strong grasping force upon it, resulting in a grasp able to resist significant outside disturbances. This is useful when using tools with which to later exert force on other things, e.g. when hammering nails.")
AnnotationAssertion(rdfs:label SOMA:PowerGrasp "Power grasp")
SubClassOf(SOMA:PowerGrasp SOMA:GraspingMotion)
DisjointClasses(SOMA:PowerGrasp SOMA:PrecisionGrasp)

# Class: SOMA:PrecisionGrasp (Precision grasp)

AnnotationAssertion(rdfs:comment SOMA:PrecisionGrasp "An Agent grasps an object, and focuses on obtaining precise kinematic control over it. This is useful for then following precise movements, e.g. when writing.")
AnnotationAssertion(rdfs:label SOMA:PrecisionGrasp "Precision grasp")
SubClassOf(SOMA:PrecisionGrasp SOMA:GraspingMotion)

# Class: SOMA:PrehensileMotion (Prehensile motion)

AnnotationAssertion(rdfs:comment SOMA:PrehensileMotion "A motion of a prehensile effector.")
AnnotationAssertion(rdfs:label SOMA:PrehensileMotion "Prehensile motion")
EquivalentClasses(SOMA:PrehensileMotion ObjectUnionOf(SOMA:GraspingMotion SOMA:ReleasingMotion))
SubClassOf(SOMA:PrehensileMotion SOMA:DirectedMotion)
SubClassOf(SOMA:PrehensileMotion ObjectSomeValuesFrom(SOMA:isProcessTypeOf ObjectIntersectionOf(SOMA:MovedObject ObjectAllValuesFrom(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#classifies> SOMA:PrehensileEffector))))

# Class: SOMA:PreservativeInteraction (Preservative interaction)

AnnotationAssertion(rdfs:comment SOMA:PreservativeInteraction "A force interaction where the agonist has a tendency to keep another object still. An example is 'holding a door closed' where some object interacts with the door to neutralize forces that could set the door into motion.")
AnnotationAssertion(rdfs:label SOMA:PreservativeInteraction "Preservative interaction")
SubClassOf(SOMA:PreservativeInteraction SOMA:ForceInteraction)

# Class: SOMA:ProcessFlow (Process flow)

AnnotationAssertion(rdfs:comment SOMA:ProcessFlow "A description that structures a Process.")
AnnotationAssertion(rdfs:label SOMA:ProcessFlow "Process flow")
SubClassOf(SOMA:ProcessFlow <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Description>)
SubClassOf(SOMA:ProcessFlow ObjectSomeValuesFrom(SOMA:definesProcess SOMA:ProcessType))

# Class: SOMA:ProcessType (Process type)

AnnotationAssertion(rdfs:comment SOMA:ProcessType "An EventType that classifies Processes.")
AnnotationAssertion(rdfs:label SOMA:ProcessType "Process type")
SubClassOf(SOMA:ProcessType <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#EventType>)
SubClassOf(SOMA:ProcessType ObjectAllValuesFrom(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#classifies> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Process>))
SubClassOf(SOMA:ProcessType ObjectAllValuesFrom(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#hasPart> SOMA:ProcessType))
SubClassOf(SOMA:ProcessType ObjectAllValuesFrom(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#isDefinedIn> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Description>))

# Class: SOMA:Progression (SOMA:Progression)

AnnotationAssertion(rdfs:comment SOMA:Progression "A situation that sattisies a description of how a process evolves over time.")
EquivalentClasses(SOMA:Progression ObjectSomeValuesFrom(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#satisfies> SOMA:ProcessFlow))
SubClassOf(SOMA:Progression <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Situation>)

# Class: SOMA:ReleasingMotion (Releasing motion)

AnnotationAssertion(rdfs:comment SOMA:ReleasingMotion "A motion by which a prehensile effector relinquishes kinematic control over an object.")
AnnotationAssertion(rdfs:label SOMA:ReleasingMotion "Releasing motion")
SubClassOf(SOMA:ReleasingMotion SOMA:PrehensileMotion)

# Class: SOMA:Rubbing (SOMA:Rubbing)

AnnotationAssertion(rdfs:comment SOMA:Rubbing "The motion of an object sliding along the surface of another, for example, to clean the surface.")
SubClassOf(SOMA:Rubbing SOMA:DirectedMotion)

# Class: SOMA:Standing (SOMA:Standing)

AnnotationAssertion(rdfs:comment SOMA:Standing "A motion by which an Agent arranges its body in an upright configuration. Typically, it makes sense to speak of standing for bodies where some limbs are dedicated to moving the whole body while some limbs are used for manipulation of other objects.")
SubClassOf(SOMA:Standing SOMA:PosturalMoving)

# Class: SOMA:Swimming (SOMA:Swimming)

AnnotationAssertion(rdfs:comment SOMA:Swimming "A motion of some body through water. The body provides the power for the motion.")
SubClassOf(SOMA:Swimming SOMA:Locomotion)
DisjointClasses(SOMA:Swimming SOMA:Walking)

# Class: SOMA:Tapping (SOMA:Tapping)

AnnotationAssertion(rdfs:comment SOMA:Tapping "A motion, usually repeated several times, for example, to probe the surface of an object.")
SubClassOf(SOMA:Tapping SOMA:DirectedMotion)

# Class: SOMA:Taxis (SOMA:Taxis)

AnnotationAssertion(rdfs:comment SOMA:Taxis "An innate behavioural response such as the knee-jerk reflex or the sucking reflex of human infants.")
SubClassOf(SOMA:Taxis SOMA:BodyMovement)

# Class: SOMA:Turning (SOMA:Turning)

AnnotationAssertion(rdfs:comment SOMA:Turning "A motion by which an agent changes which way their body faces.")
SubClassOf(SOMA:Turning SOMA:PosturalMoving)

# Class: SOMA:UndirectedMotion (Undirected motion)

AnnotationAssertion(rdfs:comment SOMA:UndirectedMotion "A Motion of a physical Entity for which a destination or path are unknown and/or considered irrelevant; the important aspect about this Motion is simply that it occurs, rather than where it is headed or how it proceeds towards it.")
AnnotationAssertion(rdfs:label SOMA:UndirectedMotion "Undirected motion")
SubClassOf(SOMA:UndirectedMotion SOMA:Motion)

# Class: SOMA:Vaporizing (SOMA:Vaporizing)

AnnotationAssertion(rdfs:comment SOMA:Vaporizing "Some material transitions from a liquid to a gaseous phase.")
AnnotationAssertion(rdfs:seeAlso SOMA:Vaporizing "Transitions from a solid to a gaseous phase are usually referred to as Sublimation.")
SubClassOf(SOMA:Vaporizing SOMA:PhaseTransition)
SubClassOf(SOMA:Vaporizing ObjectSomeValuesFrom(SOMA:isProcessTypeOf ObjectIntersectionOf(SOMA:AlteredObject ObjectAllValuesFrom(<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#classifies> <http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#Substance>))))

# Class: SOMA:Walking (SOMA:Walking)

AnnotationAssertion(rdfs:comment SOMA:Walking "An agent, under its own power, moves over some solid surface.")
SubClassOf(SOMA:Walking SOMA:Locomotion)


)